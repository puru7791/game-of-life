# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: 
 name: 'my-self-hosted'
 demands:
  - agent.name -equals myagent-01

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'SonarQube-server'
    scannerMode: 'other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=gameoflife
      sonar.projectName=gameoflife

# - task: SonarQubeAnalyze@7
#   inputs:
#     jdkversion: 'JAVA_HOME_17_X64'
- task: Gradle@4
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '2.6.1'
    spotBugsAnalysis: false
    
- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '300'
